"""update_schema_to_match_ideal

Revision ID: 6540aea1e593
Revises: ae1027a6acce
Create Date: 2025-08-23 14:59:00.101880

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6540aea1e593'
down_revision = 'f3f874212652'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('image_url', sa.Text(), nullable=True),
    sa.Column('actual_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('discounted_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plans_id'), 'plans', ['id'], unique=False)
    op.create_table('pujas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_pujas_id'), 'pujas', ['id'], unique=False)
    op.create_table('otp_logins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('otp_code', sa.String(length=6), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_otp_logins_id'), 'otp_logins', ['id'], unique=False)
    op.create_table('puja_chadawas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('puja_id', sa.Integer(), nullable=False),
    sa.Column('chadawa_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['chadawa_id'], ['chadawas.id'], ),
    sa.ForeignKeyConstraint(['puja_id'], ['pujas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_puja_chadawas_id'), 'puja_chadawas', ['id'], unique=False)
    op.create_table('puja_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('puja_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['puja_id'], ['pujas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_puja_images_id'), 'puja_images', ['id'], unique=False)
    op.create_table('puja_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('puja_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plans.id'], ),
    sa.ForeignKeyConstraint(['puja_id'], ['pujas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_puja_plans_id'), 'puja_plans', ['id'], unique=False)
    op.create_table('booking_chadawas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('chadawa_id', sa.Integer(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], ),
    sa.ForeignKeyConstraint(['chadawa_id'], ['chadawas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_booking_chadawas_id'), 'booking_chadawas', ['id'], unique=False)
    # Modify bookings table
    op.add_column('bookings', sa.Column('puja_id', sa.Integer(), nullable=True))
    op.add_column('bookings', sa.Column('plan_id', sa.Integer(), nullable=True))
    op.add_column('bookings', sa.Column('status', sa.String(length=20), nullable=False))
    op.add_column('bookings', sa.Column('puja_link', sa.Text(), nullable=True))
    op.alter_column('bookings', 'booking_date',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.alter_column('bookings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('bookings', 'updated_at')
    op.drop_column('bookings', 'pooja_id')
    op.drop_column('bookings', 'booking_status')
    op.drop_column('bookings', 'total_amount')
    op.drop_column('bookings', 'payment_status')
    
    # Create foreign keys to new tables (these will be created after pujas table is recreated)
    op.create_foreign_key(None, 'bookings', 'plans', ['plan_id'], ['id'])
    op.create_foreign_key(None, 'bookings', 'pujas', ['puja_id'], ['id'])
    
    # Modify chadawas table
    op.add_column('chadawas', sa.Column('image_url', sa.Text(), nullable=True))
    op.add_column('chadawas', sa.Column('requires_note', sa.Boolean(), nullable=True))
    op.alter_column('chadawas', 'description',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.Text(),
               existing_nullable=True)
    op.alter_column('chadawas', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=False)
    op.drop_column('chadawas', 'created_at')
    op.drop_column('chadawas', 'updated_at')
    op.drop_column('chadawas', 'pooja_id')
    op.add_column('payments', sa.Column('currency', sa.String(length=10), nullable=True))
    op.alter_column('payments', 'razorpay_order_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('payments', 'amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=False)
    op.alter_column('payments', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_payments_razorpay_order_id', table_name='payments')
    op.drop_index('ix_payments_razorpay_payment_id', table_name='payments')
    op.drop_constraint('payments_booking_id_key', 'payments', type_='unique')
    op.add_column('users', sa.Column('mobile', sa.String(length=15), nullable=False))
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=150),
               nullable=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_phone', table_name='users')
    op.create_unique_constraint(None, 'users', ['mobile'])
    op.create_unique_constraint(None, 'users', ['email'])
    op.drop_column('users', 'phone')
    op.drop_column('users', 'is_active')
    op.drop_column('users', 'password')
    op.drop_column('users', 'address')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('address', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index('ix_users_phone', 'users', ['phone'], unique=True)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'email',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=100),
               nullable=False)
    op.drop_column('users', 'mobile')
    op.create_unique_constraint('payments_booking_id_key', 'payments', ['booking_id'])
    op.create_index('ix_payments_razorpay_payment_id', 'payments', ['razorpay_payment_id'], unique=True)
    op.create_index('ix_payments_razorpay_order_id', 'payments', ['razorpay_order_id'], unique=True)
    op.alter_column('payments', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('payments', 'amount',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('payments', 'razorpay_order_id',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
    op.drop_column('payments', 'currency')
    op.add_column('chadawas', sa.Column('pooja_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('chadawas', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('chadawas', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.create_foreign_key('chadawas_pooja_id_fkey', 'chadawas', 'poojas', ['pooja_id'], ['id'])
    op.alter_column('chadawas', 'price',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.alter_column('chadawas', 'description',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.drop_column('chadawas', 'requires_note')
    op.drop_column('chadawas', 'image_url')
    op.add_column('bookings', sa.Column('payment_status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('total_amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('booking_status', sa.VARCHAR(length=20), server_default=sa.text("'pending'::character varying"), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('pooja_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('bookings', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.drop_constraint(None, 'bookings', type_='foreignkey')
    op.create_foreign_key('bookings_pooja_id_fkey', 'bookings', 'poojas', ['pooja_id'], ['id'])
    op.alter_column('bookings', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('bookings', 'booking_date',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('bookings', 'puja_link')
    op.drop_column('bookings', 'status')
    op.drop_column('bookings', 'plan_id')
    op.drop_column('bookings', 'puja_id')
    op.create_table('poojas',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('poojas_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='poojas_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_poojas_id', 'poojas', ['id'], unique=False)
    op.create_table('booking_chadawa',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('booking_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('chadawa_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['booking_id'], ['bookings.id'], name='booking_chadawa_booking_id_fkey'),
    sa.ForeignKeyConstraint(['chadawa_id'], ['chadawas.id'], name='booking_chadawa_chadawa_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='booking_chadawa_pkey')
    )
    op.create_index('ix_booking_chadawa_id', 'booking_chadawa', ['id'], unique=False)
    op.drop_index(op.f('ix_booking_chadawas_id'), table_name='booking_chadawas')
    op.drop_table('booking_chadawas')
    op.drop_index(op.f('ix_puja_plans_id'), table_name='puja_plans')
    op.drop_table('puja_plans')
    op.drop_index(op.f('ix_puja_images_id'), table_name='puja_images')
    op.drop_table('puja_images')
    op.drop_index(op.f('ix_puja_chadawas_id'), table_name='puja_chadawas')
    op.drop_table('puja_chadawas')
    op.drop_index(op.f('ix_otp_logins_id'), table_name='otp_logins')
    op.drop_table('otp_logins')
    op.drop_index(op.f('ix_pujas_id'), table_name='pujas')
    op.drop_table('pujas')
    op.drop_index(op.f('ix_plans_id'), table_name='plans')
    op.drop_table('plans')
    # ### end Alembic commands ###
